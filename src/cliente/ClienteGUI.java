/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import java.awt.Color;
import java.awt.Component;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;
import projetoSD.Mensagem;

/**
 *
 * @author Leandro
 */
public class ClienteGUI extends javax.swing.JFrame {
    static String serverIP;
    static int serverPort;

    /*
     * Variaveis para controle do core Cliente
    */
    boolean toSend = false;
    boolean logged = false;
    boolean pronto = false;
    private String COD;
    private String STATUS;
    private JSONArray LISTACLIENTE;
    private JSONArray CARTELA;
    private DefaultListModel modelClientList = new DefaultListModel();
    

    /**
     * Creates new form ClienteGUI
     */
    public ClienteGUI() {
        this.COD = new String();
        
        LoginGUI login = new LoginGUI();
        login.setVisible(true);
        
        try {
            while(login.connected == false)
                Thread.sleep(200);
            
        } catch (InterruptedException ex) {
            
        }
        login.setVisible(false);
        
        serverIP = login.serverIP;
        serverPort = login.serverPort;

        initComponents();
        msgLabel.setText("Para realizar login, digite seu nome de usuário abaixo:");
        sendMsg.setText("Login");
        loggedLabel.setText("Não logado");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgContent = new javax.swing.JTextField();
        sendMsg = new javax.swing.JButton();
        msgLabel = new javax.swing.JLabel();
        loggedLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        clientsLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientList = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        sendGame = new javax.swing.JButton();
        sendLogout = new javax.swing.JButton();
        chatLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        windowTitle = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        readyList = new javax.swing.JTextPane();
        readyTitle = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cartelaTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        timerPane = new javax.swing.JTextPane();
        timerLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        sortPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendMsg.setText("sendMsg");
        sendMsg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMsgClicked(evt);
            }
        });

        msgLabel.setText("msgLabel");

        loggedLabel.setText("loggedLabel");

        chatArea.setColumns(20);
        chatArea.setRows(5);
        chatArea.setEnabled(false);
        jScrollPane1.setViewportView(chatArea);

        clientsLabel.setText("Clientes logados:");

        clientList.setModel(modelClientList);
        clientList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clientList.setEnabled(false);
        jScrollPane2.setViewportView(clientList);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        sendGame.setText("sendGame");
        sendGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendGameClicked(evt);
            }
        });

        sendLogout.setText("Logout");
        sendLogout.setEnabled(false);
        sendLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendLogoutClicked(evt);
            }
        });

        chatLabel.setText("Chat:");

        statusLabel.setFont(new java.awt.Font("Showcard Gothic", 1, 18)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 0, 0));
        statusLabel.setText("CLIENTE");

        windowTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        windowTitle.setText("BINGO NA LAN");

        readyList.setEnabled(false);
        jScrollPane3.setViewportView(readyList);

        readyTitle.setText("Jogadores Prontos:");

        cartelaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "B", "I", "N", "G", "O"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(cartelaTable);

        timerPane.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        timerPane.setText("00");
        timerPane.setEnabled(false);
        jScrollPane5.setViewportView(timerPane);

        timerLabel.setText("Jogo inicia em (s):");

        sortPane.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sortPane.setEnabled(false);
        jScrollPane6.setViewportView(sortPane);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Nenhum número sorteado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientsLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chatLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(10, 10, 10))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msgLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(msgContent, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statusLabel)
                                .addGap(50, 50, 50)
                                .addComponent(windowTitle)
                                .addGap(28, 28, 28)
                                .addComponent(loggedLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sendLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sendMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timerLabel)
                    .addComponent(readyTitle)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendGame))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusLabel)
                            .addComponent(windowTitle)
                            .addComponent(loggedLabel)
                            .addComponent(sendLogout))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msgLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msgContent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendMsg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientsLabel)
                            .addComponent(chatLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(timerLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(readyTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(sendGame)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendMsgClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMsgClicked
        // TODO add your handling code here:
        if(this.logged == false){
            this.setCOD("login");
            this.setToSend(true);
            return;
        }
        
        // Verifica se existe cliente selecionado
        if(getClientList().getSelectedIndices().length == 0){
            // Envia msg broadcast
            this.setCOD("chat");
            this.setSTATUS("broad");
            this.setToSend(true);
            
        }else if(getClientList().getSelectedIndices().length == 1){
            // Envia msg para um ou mais clientes
            this.setCOD("chat");
            this.setSTATUS("uni");
            this.setLISTACLIENTE(new JSONArray());
            this.getLISTACLIENTE()
                    .put(new JSONObject().put("NOME", clientList.getSelectedValue()));
            
            this.setToSend(true);
        }
        
        
        
    }//GEN-LAST:event_sendMsgClicked

    private void sendGameClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendGameClicked
        // TODO add your handling code here:
        if(pronto == false){
            pronto = true;
            this.setCOD("pronto");
            this.setSTATUS("sucesso");
            this.getSendGame().setText("Sair do jogo");
            
        }else{
            pronto = false;
            this.setCOD("pronto");
            this.setSTATUS("falha");
            this.sendGame.setText("Entrar no jogo");
        }
        this.setToSend(true);
        
    }//GEN-LAST:event_sendGameClicked

    private void sendLogoutClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendLogoutClicked
        // TODO add your handling code here:
        this.setCOD("logout");
        this.setToSend(true);
    }//GEN-LAST:event_sendLogoutClicked

    
    protected void refreshTable(JSONArray cartela){
        String header[] = {"B", "I", "N", "G", "O"};
        int matriz[][] = new int[5][5];
        System.out.println(cartela.toString());
        int i = 0;
        int j = 0;
        int k = 0;
        
        while((i * j) < cartela.length()){
            j = 0;
            while(j < 5){
                matriz[j][i] = cartela.getInt( k );
                j++;
                k++;
            }            
            i++;
        }
       
        for(i = 0; i < matriz.length; i++){

            for(j = 0; j < matriz[i].length; j++){
                cartelaTable.getModel().setValueAt(matriz[i][j], i, j);
                //System.out.print("[" + i + "]" + "[" + j + "]" + matriz[i][j] + " ");
            }
            //System.out.print("\n");
        }
        
        
    }
    
    protected void markTable(int num){
        
        for(int i = 0; i < cartelaTable.getModel().getRowCount(); i++){
            for(int j = 0; j < cartelaTable.getModel().getColumnCount(); j++){
                //System.out.println("tab: " + Integer.parseInt(cartelaTable.getModel().getValueAt(i, j).toString()));
                if(Integer.parseInt(cartelaTable.getModel().getValueAt(i, j).toString()) == num){
                    System.out.println("Marca: [" + i + "][" + j + "]");
                    
                    // Destacar a celula marcada na tabela
                    
                    COD = "marca";
                    STATUS = "sucesso";
                    CARTELA = new JSONArray()
                            .put(num);
                    toSend = true;
        
                    return;
                }
            }
        }
    }
    
    protected void lottery(Mensagem msg){
        sortPane.setText(String.valueOf(msg.CARTELA.getInt(0)));
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteGUI().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable cartelaTable;
    private javax.swing.JTextArea chatArea;
    private javax.swing.JLabel chatLabel;
    private javax.swing.JList<String> clientList;
    private javax.swing.JLabel clientsLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel loggedLabel;
    private javax.swing.JTextField msgContent;
    private javax.swing.JLabel msgLabel;
    protected javax.swing.JTextPane readyList;
    private javax.swing.JLabel readyTitle;
    protected javax.swing.JButton sendGame;
    private javax.swing.JButton sendLogout;
    private javax.swing.JButton sendMsg;
    protected javax.swing.JTextPane sortPane;
    protected javax.swing.JLabel statusLabel;
    private javax.swing.JLabel timerLabel;
    protected javax.swing.JTextPane timerPane;
    protected javax.swing.JLabel windowTitle;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the isSend
     */
    public boolean getToSend() {
        return toSend;
    }

    /**
     * @param toSend the toSend to set
     */
    public void setToSend(boolean toSend) {
        this.toSend = toSend;
    }

    /**
     * @return the msgContent
     */
    public javax.swing.JTextField getMsgContent() {
        return msgContent;
    }

    /**
     * @param msgContent the msgContent to set
     */
    public void setMsgContent(javax.swing.JTextField msgContent) {
        this.msgContent = msgContent;
    }

    /**
     * @return the logged
     */
    public boolean isLogged() {
        return logged;
    }

    /**
     * @param logged the logged to set
     */
    public void setLogged(boolean logged) {
        this.logged = logged;
    }

    /**
     * @return the msgLabel
     */
    public javax.swing.JLabel getMsgLabel() {
        return msgLabel;
    }

    /**
     * @param msgLabel the msgLabel to set
     */
    public void setMsgLabel(javax.swing.JLabel msgLabel) {
        this.msgLabel = msgLabel;
    }

    /**
     * @return the COD
     */
    public String getCOD() {
        return COD;
    }

    /**
     * @param COD the COD to set
     */
    public void setCOD(String COD) {
        this.COD = COD;
    }


    /**
     * @return the clientList
     */
    public javax.swing.JList<String> getClientList() {
        return clientList;
    }
    
    /**
     * @return the loggedArea
     */
    public javax.swing.JTextArea getLoggedArea() {
        return getChatArea();
    }

    /**
     * @return the loggedLabel
     */
    public javax.swing.JLabel getLoggedLabel() {
        return loggedLabel;
    }

    /**
     * @param loggedLabel the loggedLabel to set
     */
    public void setLoggedLabel(javax.swing.JLabel loggedLabel) {
        this.loggedLabel = loggedLabel;
    }

    /**
     * @return the modelClientList
     */
    public DefaultListModel getModelClientList() {
        return modelClientList;
    }

    /**
     * @return the chatArea
     */
    public javax.swing.JTextArea getChatArea() {
        return chatArea;
    }

    /**
     * @return the sendLogout
     */
    public javax.swing.JButton getSendLogout() {
        return sendLogout;
    }

    /**
     * @return the sendGame
     */
    public javax.swing.JButton getSendGame() {
        return sendGame;
    }

    /**
     * @return the sendMsg
     */
    public javax.swing.JButton getSendMsg() {
        return sendMsg;
    }

    /**
     * @return the STATUS
     */
    public String getSTATUS() {
        return STATUS;
    }

    /**
     * @param STATUS the STATUS to set
     */
    public void setSTATUS(String STATUS) {
        this.STATUS = STATUS;
    }

    /**
     * @return the NOMEDESTINATARIO
     */
    public JSONArray getLISTACLIENTE() {
        return LISTACLIENTE;
    }

    /**
     * @param LISTACLIENTE the LISTACLIENTE to set
     */
    public void setLISTACLIENTE(JSONArray LISTACLIENTE) {
        this.LISTACLIENTE = LISTACLIENTE;
    }

    /**
     * @return the CARTELA
     */
    public JSONArray getCARTELA() {
        return CARTELA;
    }
}
